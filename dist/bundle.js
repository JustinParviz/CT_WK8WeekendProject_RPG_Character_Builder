(()=>{"use strict";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let e;const r=new Uint8Array(16);function a(){if(!e&&(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!e))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(r)}const c=[];for(let t=0;t<256;++t)c.push((t+256).toString(16).slice(1));const n=function(e,r,n){if(t.randomUUID&&!r&&!e)return t.randomUUID();const o=(e=e||{}).random||(e.rng||a)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,r){n=n||0;for(let t=0;t<16;++t)r[n+t]=o[t];return r}return function(t,e=0){return c[t[e+0]]+c[t[e+1]]+c[t[e+2]]+c[t[e+3]]+"-"+c[t[e+4]]+c[t[e+5]]+"-"+c[t[e+6]]+c[t[e+7]]+"-"+c[t[e+8]]+c[t[e+9]]+"-"+c[t[e+10]]+c[t[e+11]]+c[t[e+12]]+c[t[e+13]]+c[t[e+14]]+c[t[e+15]]}(o)};class o{constructor(t,e,r,a,c,o){this.collectGold$=t,this.characterName=e,this.description=r,this.race=a,this.warriorType=c,this.weapon=o,this._id=n()}get id(){return this._id}get collectGold(){return this.collectGold$}stats(){console.log(`This Character has ${this.collectGold$}`)}}let s=document.getElementById("characterForm");const d=new class{constructor(){this.characters=[]}addCharacter(t){this.characters.push(t),this.updateCharacterList()}removeCharacter(t){const e=this.characters.findIndex((e=>e.id===t));-1!==e&&this.characters.splice(e,1),this.updateCharacterList()}updateCharacterList(){const t=document.getElementById("characters");t.innerHTML="",this.characters.forEach((e=>{const r=`\n            \n                <div class="card mb-3 rounded">\n                    <div class="card-body">\n                        <h5 class="card-title">Character Name: ${e.characterName}</h5>\n                        <p class="card-text">Description: ${e.description}</p>\n                        <p class="card-text">Race: ${e.race}</p>\n                        <p class="card-text">Warrior Type: ${e.warriorType}</p>\n                        <p class="card-text">Weapon: ${e.weapon}</p>\n                        <button type="submit" class="btn btn-danger btn-sm" data-task=${e.id}>Remove</button>\n                    </div>\n                </div>\n            `;t.insertAdjacentHTML("beforeend",r)})),t.querySelectorAll(".btn-danger").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-character");e&&this.removeCharacter(e)}))}))}};s.addEventListener("submit",(t=>{t.preventDefault();const e=document.getElementById("characterName"),r=document.getElementById("description"),a=document.getElementById("race"),c=document.getElementById("warriorType"),n=document.getElementById("weapon");let i=e.value,l=r.value,u=a.value,h=c.value,p=n.value;console.log(i,l,u,h,p);const m=new o("150 gold",i,l,u,h,p);d.addCharacter(m),s.reset()}))})();